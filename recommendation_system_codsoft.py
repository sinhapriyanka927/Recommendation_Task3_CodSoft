# -*- coding: utf-8 -*-
"""Recommendation_System_CodSoft

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LRnkDNyNYbbLwLCyEHOrj-YDOYcRkWnl

# 🎬 Task 3: Movie Recommendation System  
👩‍💻 **Name:** Priyanka Sinha  
📅 **Internship:** CodSoft AI – June Batch  

---

## 📝 Text-Based Demo Explanation

👉 This is a simple content-based **movie recommendation system** in Python.  
👉 It compares movie genres using **text similarity** to suggest similar movies.  
👉 I used sample movie data and calculated **cosine similarity** between genres.  
👉 The system recommends 3 movies similar to the one you type.  
👉 This runs directly in Colab and uses `pandas`, `sklearn`, and `cosine_similarity`.

Below is the code and sample output.
"""

import pandas as pd
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.metrics.pairwise import cosine_similarity

# Sample movie data
movies = pd.DataFrame({
    'title': ['Avengers', 'Iron Man', 'Thor', 'Hulk', 'Captain America', 'Spider-Man', 'Doctor Strange'],
    'genre': ['action adventure', 'action sci-fi', 'action fantasy', 'action', 'action war', 'action hero', 'action magic']
})

# Vectorize the genre text
vectorizer = CountVectorizer()
genre_matrix = vectorizer.fit_transform(movies['genre'])

# Compute similarity
similarity = cosine_similarity(genre_matrix)

# Recommend function
def recommend(movie_title):
    if movie_title not in movies['title'].values:
        print(f"Sorry, '{movie_title}' not found in the database.")
        return

    index = movies[movies['title'] == movie_title].index[0]
    scores = list(enumerate(similarity[index]))
    sorted_scores = sorted(scores, key=lambda x: x[1], reverse=True)[1:4]

    print(f"\n🎬 Recommended Movies similar to '{movie_title}':")
    for i in sorted_scores:
        print("-", movies.iloc[i[0]]['title'])

# Try it out
recommend('Avengers')